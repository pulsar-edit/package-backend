openapi: 3.1.0
info:
  version: 1.1.0
  title: Pulsar
  description: >-
    Allows for the management, viewing, and downloading of packages and themes
    for use within the Pulsar editor.
  license:
    name: MIT
    identifier: MIT
servers:
  - url: https://api.pulsar-edit.dev
    description: Production Server
  - url: http://localhost:8080
    description: Locally hosted development server
paths:
  /api/login:
    get:
      summary: OAuth callback URL.
      responses:
        '302':
          description: A redirect to the GitHub OAuth Authorization login flow.
      parameters: []
  /api/oauth:
    get:
      summary: OAuth Callback URL.
      responses:
        '302':
          description: A redirect to the Pulsar Package Website User page.
      parameters: []
  /api/packages:
    post:
      summary: Publishes a new Package.
      responses: {}
      parameters:
        - $ref: '#/components/parameters/repository'
        - $ref: '#/components/parameters/auth'
  /api/packages/featured:
    get:
      summary: Returns all featured packages. Previously undocumented endpoint.
      responses:
        '200':
          description: An array of featured packages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters: []
  /api/packages/search:
    get:
      summary: Searches all packages.
      responses:
        '200':
          description: Any array of packages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/fileExtension'
        - $ref: '#/components/parameters/serviceType'
        - $ref: '#/components/parameters/service'
        - $ref: '#/components/parameters/serviceVersion'
        - $ref: '#/components/parameters/owner'
  /api/pat:
    get:
      summary: PAT Token Signup URL.
      responses: {}
      parameters: []
  /:
    get:
      summary: >-
        Non-Essential endpoint to return status message, and link to Swagger
        Instance.
      responses: {}
      parameters: []
  /api/stars:
    get:
      summary: List the authenticated users' starred packages.
      responses:
        '200':
          description: >-
            Return a value similar to `GET /api/packages`, an array of package
            objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters:
        - $ref: '#/components/parameters/auth'
  /api/themes:
    post:
      summary: Publishes a new Package.
      responses: {}
      parameters:
        - $ref: '#/components/parameters/repository'
        - $ref: '#/components/parameters/auth'
  /api/themes/featured:
    get:
      summary: Display featured packages that are themes.
      responses:
        '200':
          description: An array of featured themes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters: []
  /api/themes/search:
    get:
      summary: Get featured packages that are themes. Previously undocumented.
      responses:
        '200':
          description: A paginated response of themes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/query'
  /api/updates:
    get:
      summary: List Pulsar Updates
      description: >-
        Currently returns 'Not Implemented' as Squirrel AutoUpdate is not
        supported.
      responses:
        '200':
          description: Atom update feed, following the format expected by Squirrel.
          content: {}
      parameters: []
  /api/users:
    get:
      summary: >-
        Display details of the currently authenticated user. This endpoint is
        undocumented and is somewhat strange.
      description: >-
        This endpoint only exists on the web version of the upstream API. Having
        no backend equivolent.
      responses:
        '200':
          description: Details of the Authenticated User Account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userObjectPrivate'
      parameters:
        - $ref: '#/components/parameters/auth'
  /api/packages/{packageName}/versions/{versionName}:
    get:
      summary: Get the details of a specific package version.
      responses:
        '200':
          description: The 'package.json' plus more details of a single package version.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectJSON'
      parameters:
        - $ref: '#/components/parameters/packageName'
        - $ref: '#/components/parameters/versionName'
  /api/themes/{packageName}/versions/{versionName}:
    get:
      summary: Get the details of a specific package version.
      responses:
        '200':
          description: The 'package.json' plus more details of a single package version.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectJSON'
      parameters:
        - $ref: '#/components/parameters/packageName'
        - $ref: '#/components/parameters/versionName'
  /api/packages/{packageName}/star:
    post:
      summary: Star a package.
      responses:
        '200':
          description: A 'Package Object Full' of the modified package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectFull'
      parameters:
        - $ref: '#/components/parameters/auth'
        - $ref: '#/components/parameters/packageName'
  /api/themes/{packageName}/star:
    post:
      summary: Star a package.
      responses:
        '200':
          description: A 'Package Object Full' of the modified package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectFull'
      parameters:
        - $ref: '#/components/parameters/auth'
        - $ref: '#/components/parameters/packageName'
  /api/packages/{packageName}:
    get:
      summary: Show package details.
      responses:
        '200':
          description: A 'Package Object Full' of the requested package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectFull'
      parameters:
        - $ref: '#/components/parameters/engine'
        - $ref: '#/components/parameters/packageName'
  /api/themes/{packageName}:
    get:
      summary: Show package details.
      responses:
        '200':
          description: A 'Package Object Full' of the requested package.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectFull'
      parameters:
        - $ref: '#/components/parameters/engine'
        - $ref: '#/components/parameters/packageName'
  /api/packages/{packageName}/versions/{versionName}/tarball:
    get:
      summary: Previously undocumented endpoint. Allows for installation of a package.
      responses:
        '302':
          description: Redirect to the GitHub tarball URL.
      parameters:
        - $ref: '#/components/parameters/packageName'
        - $ref: '#/components/parameters/versionName'
  /api/themes/{packageName}/versions/{versionName}/tarball:
    get:
      summary: Previously undocumented endpoint. Allows for installation of a package.
      responses:
        '302':
          description: Redirect to the GitHub tarball URL.
      parameters:
        - $ref: '#/components/parameters/packageName'
        - $ref: '#/components/parameters/versionName'
  /api/packages/{packageName}/stargazers:
    get:
      summary: List the users that have starred a package.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userObjectPublicArray'
      parameters:
        - $ref: '#/components/parameters/packageName'
  /api/themes/{packageName}/stargazers:
    get:
      summary: List the users that have starred a package.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userObjectPublicArray'
      parameters:
        - $ref: '#/components/parameters/packageName'
  /api/packages/{packageName}/versions/{versionName}/events/uninstall:
    post:
      summary: Previously undocumented endpoint. Since v1.0.2 has no effect.
      deprecated: true
      responses: {}
      parameters: []
  /api/themes/{packageName}/versions/{versionName}/events/uninstall:
    post:
      summary: Previously undocumented endpoint. Since v1.0.2 has no effect.
      deprecated: true
      responses: {}
      parameters: []
  /api/packages/{packageName}/versions:
    post:
      summary: Creates a new package version.
      responses: {}
      parameters:
        - $ref: '#/components/parameters/rename'
        - $ref: '#/components/parameters/auth'
        - $ref: '#/components/parameters/packageName'
  /api/themes/{packageName}/versions:
    post:
      summary: Creates a new package version.
      responses: {}
      parameters:
        - $ref: '#/components/parameters/rename'
        - $ref: '#/components/parameters/auth'
        - $ref: '#/components/parameters/packageName'
  /api/users/{login}/stars:
    get:
      summary: List a user's starred packages.
      responses:
        '200':
          description: Return value is similar to `GET /api/packages`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters:
        - $ref: '#/components/parameters/login'
  /api/users/{login}:
    get:
      summary: >-
        Display the details of any user, as well as the packages they have
        published.
      responses:
        '200':
          description: The public details of a specific user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userObjectPublic'
        '404':
          description: The User requested cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
      parameters:
        - $ref: '#/components/parameters/login'
  /api/owners/{ownerName}:
    get:
      summary: List all packages published under a single owner.
      responses:
        '200':
          description: A paginated response of packages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/packageObjectShortArray'
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/owner'
components:
  parameters:
    auth:
      name: auth
      in: header
      schema:
        type: string
      required: true
      allowEmptyValue: false
      description: Authorization Headers
    multiSchema:
      name: multiSchema
      owner:
        name: owner
        in: query
        schema:
          type: string
        example: pulsar-edit
        allowEmptyValue: false
        required: false
        description: Owner to filter results by.
      ownerName:
        name: ownerName
        in: path
        schema:
          type: string
        example: pulsar-edit
        allowEmptyValue: false
        required: true
        description: Owner of packages to retreive.
    engine:
      name: engine
      in: query
      schema:
        type: string
      example: 1.0.0
      allowEmptyValue: true
      description: >-
        Only show packages compatible with this Pulsar version. Must be a valid
        Semver.
    fileExtension:
      name: fileExtension
      in: query
      schema:
        type: string
      example: coffee
      allowEmptyValue: true
      description: File extension of which to only show compatible grammar package's of.
    filter:
      name: filter
      in: query
      schema:
        type: string
        enum:
          - package
          - theme
        default: pacakge
      required: false
      allowEmptyValue: false
      example: package
      description: >-
        Deprecated method to display packages or themes. Use
        `/api/themes/search` or `/api/packages/search` instead.
    login:
      name: login
      in: path
      schema:
        type: string
      required: true
      allowEmptyValue: false
      example: confused-Techie
      description: The User from the URL Path
    packageName:
      name: packageName
      in: path
      schema:
        type: string
      required: true
      allowEmptyValue: false
      example: autocomplete-powershell
      description: The name of the package to reutrn details for. Must be URL escaped.
    page:
      name: page
      in: query
      schema:
        type: number
        minimum: 1
        default: 1
      example: 1
      allowEmptyValue: true
      required: false
      description: The page of available results to return.
    q:
      name: q
      in: query
      schema:
        type: string
      example: generic-lsp
      required: true
      description: Search Query
    rename:
      name: rename
      in: query
      schema:
        type: string
      example: new-package-name
      allowEmptyValue: false
      required: false
      description: The new package name to rename to, if applicable.
    repository:
      name: repository
      in: query
      schema:
        type: string
      example: pulsar-edit/pulsar
      allowEmptyValue: false
      required: true
      description: Repository to publish.
    service:
      name: service
      in: query
      schema:
        type: string
      example: autocomplete.watchEditor
      allowEmptyValue: true
      description: The service of which to filter packages by
    serviceType:
      name: serviceType
      in: query
      schema:
        type: string
        enum:
          - consumed
          - provided
      example: consumed
      allowEmptyValue: true
      deescription: >-
        Choos whether to display 'consumer' or 'providers' of the specified
        service.
    serviceVersion:
      name: serviceVersion
      in: query
      schema:
        type: string
      example: 0.0.1
      allowEmptyValue: true
      description: Filter by a specific version of the 'service'
    sort:
      name: sort
      in: query
      schema:
        type: string
        enum:
          - downloads
          - created_at
          - updated_at
          - stars
          - relevance
        default: downloads
      example: downloads
      required: false
      allowEmptyValue: false
      description: Value to sort search results by.
    tag:
      name: tag
      in: query
      schema:
        type: string
      example: TODO
      allowEmptyValue: false
      required: false
      description: TODO
    versionName:
      name: versionName
      in: path
      schema:
        type: string"
      required: true
      allowEmptyValue: false
      example: 1.0.0
      description: The version of the package to access
  schemas:
    message:
      description: >-
        A generic object that could contain status information or error
        messages.
      type: object
      required:
        - message
      properties:
        message:
          type: string
    packageObjectFull:
      description: A 'Package Object Full' of a package on the PPR.
      type: object
      required:
        - name
        - readme
        - metadata
        - releases
        - versions
        - repository
        - creation_method
        - downloads
        - stargazers_count
        - badges
        - owner
      properties:
        name:
          type: string
        readme:
          type: string
        metadata:
          type: object
        releases:
          type: object
        versions:
          type: object
        repository:
          type: object
        creation_method:
          type: string
        downloads:
          type: string
        stargazers_count:
          type: string
        badges:
          type: array
        owner:
          type: string
    packageObjectFullArray:
      type: array
      items:
        $ref: '#/components/schemas/packageObjectFull'
    packageObjectShort:
      description: A 'Package Object Short' of a package on the PPR.
      type: object
      required:
        - name
        - readme
        - metadata
        - repository
        - downloads
        - stargazers_count
        - releases
        - badges
        - owner
      properties:
        name:
          type: string
        readme:
          type: string
        metadata:
          type: object
        repository:
          type: object
        creation_method:
          type: string
        downloads:
          type: string
        stargazers_count:
          type: string
        releases:
          type: object
        badges:
          type: array
        owner:
          type: string
    packageObjectShortArray:
      type: array
      items:
        $ref: '#/components/schemas/packageObjectShort'
    userObjectPrivate:
      description: Privately returned information of users on Pulsar.
      type: object
      required:
        - username
        - avatar
        - data
        - created_at
        - packages
      properties:
        username:
          type: string
        avatar:
          type: string
        data:
          type: object
        node_id:
          type: string
        token:
          type: string
        created_at:
          type: string
        packages:
          type: array
    userObjectPublic:
      description: Publicaly returned information of users on Pulsar.
      type: object
      required:
        - username
        - avatar
        - data
        - created_at
        - packages
      properties:
        username:
          type: string
        avatar:
          type: string
        data:
          type: object
        created_at:
          type: string
        packages:
          type: array
    userObjectPublicArray:
      type: array
      items:
        $ref: '#/components/schemas/userObjectPublic'

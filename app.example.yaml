# To use this configuration, copy its contents to a new file at the root of the project.
# Name this file app.yaml, and it will be picked up by the server.
# app.yaml is in the git ignore to prevent any secrets from leaking.

runtime: nodejs22
service: default

env_variables:
  PORT: 8080
  # Valid Search:
  SERVERURL: "http://localhost:8080"
  # Paginate is the amount to paginate results by.
  PAGINATE: 30
  # The cache time defines how long until an in memory resource is expired, and demands to
  # be read from disk again. Measured in milliseconds.
  # The default value for testing is 10 minutes = 600000
  CACHETIME: 600000
  # The following settings are for storing data within Google Cloud Storage
  GCLOUD_STORAGE_BUCKET: "bucket_name"
  GOOGLE_APPLICATION_CREDENTIALS: "local_file_path"
  # The GH Client ID, for use with OAuth
  GH_CLIENTID: ""
  # The Client Secret to accompany the CLIENT ID
  GH_CLIENTSECRET: ""
  # The User Agent thats used to communicate with GitHub
  GH_USERAGENT: "Pulsar-Edit Bot"
  # The URI that the OAuth instance should redirect to. Should end in `/api/oauth`
  GH_REDIRECTURI: "https://api.pulsar-edit.dev/api/oauth"
  # The following are Database settings that should be pretty self-explainitory.
  DB_HOST: ""
  DB_USER: ""
  DB_PASS: ""
  DB_DB: ""
  DB_PORT: 8080
  # This should be the path to a cert file for your DB
  DB_SSL_CERT: ""
  # Determines how verbose your logs will be.
  # Requires a numeric value to be input. These below values are inclusive of values below it.
  # 1 - Fatal
  # 2 - Error
  # 3 - Warning
  # 4 - Information
  # 5 - Debug
  # 6 - Trace
  LOG_LEVEL: 6
  # Determines how Logs are written. Currently supports the following options:
  # stdout - Writes the console
  LOG_FORMAT: "stdout"
  RATE_LIMIT_GENERIC: 600
  RATE_LIMIT_AUTH: 300
  WEBHOOK_PUBLISH: ""
  WEBHOOK_VERSION: ""
  WEBHOOK_USERNAME: ""
